
================================================================================
File: dist\assets\popup.css
Size: 3.25 kB
================================================================================

:root{font-family:system-ui,Avenir,Helvetica,Arial,sans-serif;line-height:1.5;font-weight:400;color-scheme:light dark;color:#ffffffde;background-color:#242424;font-synthesis:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a{font-weight:500;color:#646cff;text-decoration:inherit}a:hover{color:#535bf2}body{margin:0;display:flex;place-items:center;width:900px;height:700px}h1{font-size:3.2em;line-height:1.1}button{border-radius:8px;border:1px solid transparent;padding:.6em 1.2em;font-size:1em;font-weight:500;font-family:inherit;background-color:#1a1a1a;cursor:pointer;transition:border-color .25s}button:hover{border-color:#646cff}button:focus,button:focus-visible{outline:4px auto -webkit-focus-ring-color}@media (prefers-color-scheme: light){:root{color:#213547;background-color:#fff}a:hover{color:#747bff}button{background-color:#f9f9f9}}#root{width:100vw;height:100vh;margin:0;padding:0;overflow:hidden}.logo{height:6em;padding:1.5em;will-change:filter;transition:filter .3s}.logo:hover{filter:drop-shadow(0 0 2em #646cffaa)}.logo.react:hover{filter:drop-shadow(0 0 2em #61dafbaa)}@keyframes logo-spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media (prefers-reduced-motion: no-preference){a:nth-of-type(2) .logo{animation:logo-spin infinite 20s linear}}.card{padding:2em}.read-the-docs{color:#888}body{margin:0;padding:0;overflow:hidden}.popup-root{width:100vw;height:100vh;background:#f7f7f7;display:flex;flex-direction:column;overflow:hidden}.topbar{height:48px;display:flex;align-items:center;justify-content:space-between;padding:0 8px;background:#ff9100}.canvas{flex:1;position:relative;overflow:hidden;background:#fff;margin:4px;border-radius:4px}.toolbar{padding:4px;display:flex;gap:8px;background:#fff;border-bottom:1px solid #eee}.toolbar button{display:flex;align-items:center;justify-content:center;padding:4px 8px;min-width:32px;height:32px}.toolbar_icon{width:32px;aspect-ratio:1/1;object-fit:cover}.bubble{position:absolute;background:#ddd;border-radius:10px;box-shadow:0 4px 12px #00000026}.bubble-drag{height:20px;background:repeating-linear-gradient(to right,#fff,#fff 2px,transparent 2px,transparent 6px);cursor:move}.bubble-content{flex:1;padding:12px;font-family:sans-serif;position:relative}.bubble-text{width:100%;height:100%;outline:none;color:#000;font-size:16px;cursor:text;word-break:break-word}.bubble-image{max-width:100%;max-height:100%;object-fit:contain}.bubble-dot{position:absolute;width:10px;height:10px;background:#ff9100;border-radius:50%}.bubble-dot.top{top:-10px;left:50%;transform:translate(-50%)}.bubble-dot.bottom{bottom:-10px;left:50%;transform:translate(-50%)}.bubble-dot.left{left:-10px;top:50%;transform:translateY(-50%)}.bubble-dot.right{right:-10px;top:50%;transform:translateY(-50%)}.bubble-remove{position:absolute;top:-8px;right:-8px;width:22px;height:22px;border:none;border-radius:50%;background:#f44;color:#fff;cursor:pointer;font-size:14px;display:flex;align-items:center;justify-content:center}.bubble-resize{position:absolute;right:0;bottom:0;width:0;height:0;border-left:18px solid transparent;border-top:18px solid transparent;border-right:18px solid #ff9100;border-bottom:18px solid #ff9100;cursor:nwse-resize}


================================================================================
File: dist\background.js
Size: 10.31 kB
================================================================================

function W(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var w={exports:{}},U=w.exports,L;function D(){return L||(L=1,(function(l,Z){(function(p,k){k(l)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:U,function(p){if(!(globalThis.chrome&&globalThis.chrome.runtime&&globalThis.chrome.runtime.id))throw new Error("This script should only be loaded in a browser extension.");if(globalThis.browser&&globalThis.browser.runtime&&globalThis.browser.runtime.id)p.exports=globalThis.browser;else{const k="The message port closed before a response was received.",$=x=>{const y={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(y).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class E extends WeakMap{constructor(r,n=void 0){super(n),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const O=e=>e&&typeof e=="object"&&typeof e.then=="function",P=(e,r)=>(...n)=>{x.runtime.lastError?e.reject(new Error(x.runtime.lastError.message)):r.singleCallbackArg||n.length<=1&&r.singleCallbackArg!==!1?e.resolve(n[0]):e.resolve(n)},f=e=>e==1?"argument":"arguments",_=(e,r)=>function(g,...t){if(t.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${f(r.minArgs)} for ${e}(), got ${t.length}`);if(t.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${f(r.maxArgs)} for ${e}(), got ${t.length}`);return new Promise((a,A)=>{if(r.fallbackToNoCallback)try{g[e](...t,P({resolve:a,reject:A},r))}catch(s){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,s),g[e](...t),r.fallbackToNoCallback=!1,r.noCallback=!0,a()}else r.noCallback?(g[e](...t),a()):g[e](...t,P({resolve:a,reject:A},r))})},S=(e,r,n)=>new Proxy(r,{apply(g,t,a){return n.call(t,e,...a)}});let b=Function.call.bind(Object.prototype.hasOwnProperty);const h=(e,r={},n={})=>{let g=Object.create(null),t={has(A,s){return s in e||s in g},get(A,s,o){if(s in g)return g[s];if(!(s in e))return;let i=e[s];if(typeof i=="function")if(typeof r[s]=="function")i=S(e,e[s],r[s]);else if(b(n,s)){let u=_(s,n[s]);i=S(e,e[s],u)}else i=i.bind(e);else if(typeof i=="object"&&i!==null&&(b(r,s)||b(n,s)))i=h(i,r[s],n[s]);else if(b(n,"*"))i=h(i,r[s],n["*"]);else return Object.defineProperty(g,s,{configurable:!0,enumerable:!0,get(){return e[s]},set(u){e[s]=u}}),i;return g[s]=i,i},set(A,s,o,i){return s in g?g[s]=o:e[s]=o,!0},defineProperty(A,s,o){return Reflect.defineProperty(g,s,o)},deleteProperty(A,s){return Reflect.deleteProperty(g,s)}},a=Object.create(e);return new Proxy(a,t)},C=e=>({addListener(r,n,...g){r.addListener(e.get(n),...g)},hasListener(r,n){return r.hasListener(e.get(n))},removeListener(r,n){r.removeListener(e.get(n))}}),B=new E(e=>typeof e!="function"?e:function(n){const g=h(n,{},{getContent:{minArgs:0,maxArgs:0}});e(g)}),M=new E(e=>typeof e!="function"?e:function(n,g,t){let a=!1,A,s=new Promise(d=>{A=function(c){a=!0,d(c)}}),o;try{o=e(n,g,A)}catch(d){o=Promise.reject(d)}const i=o!==!0&&O(o);if(o!==!0&&!i&&!a)return!1;const u=d=>{d.then(c=>{t(c)},c=>{let v;c&&(c instanceof Error||typeof c.message=="string")?v=c.message:v="An unexpected error occurred",t({__mozWebExtensionPolyfillReject__:!0,message:v})}).catch(c=>{console.error("Failed to send onMessage rejected reply",c)})};return u(i?o:s),!0}),j=({reject:e,resolve:r},n)=>{x.runtime.lastError?x.runtime.lastError.message===k?r():e(new Error(x.runtime.lastError.message)):n&&n.__mozWebExtensionPolyfillReject__?e(new Error(n.message)):r(n)},R=(e,r,n,...g)=>{if(g.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${f(r.minArgs)} for ${e}(), got ${g.length}`);if(g.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${f(r.maxArgs)} for ${e}(), got ${g.length}`);return new Promise((t,a)=>{const A=j.bind(null,{resolve:t,reject:a});g.push(A),n.sendMessage(...g)})},q={devtools:{network:{onRequestFinished:C(B)}},runtime:{onMessage:C(M),onMessageExternal:C(M),sendMessage:R.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:R.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},T={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return y.privacy={network:{"*":T},services:{"*":T},websites:{"*":T}},h(x,q,y)};p.exports=$(chrome)}})})(w)),w.exports}var I=D();const N=W(I),m=typeof N<"u"?N:chrome;function F(){try{const l=m.runtime.getURL("popup.html");m.windows&&m.windows.create?m.windows.create({url:l,type:"popup",width:900,height:700}):m.runtime&&m.runtime.openOptionsPage&&m.runtime.openOptionsPage()}catch(l){console.error("Failed to open window",l)}}m.action&&m.action.onClicked?m.action.onClicked.addListener(F):m.browserAction&&m.browserAction.onClicked&&m.browserAction.onClicked.addListener(F);m.alarms&&(m.alarms.create("noop",{periodInMinutes:59}),m.alarms.onAlarm.addListener(()=>{}));


================================================================================
File: dist\manifest.json
Size: 667 B
================================================================================

{
  "manifest_version": 2,
  "name": "Ouvrir Synapse",
  "version": "1.0.0",
  "description": "Extension moderne avec React + Vite",
  "browser_action": {
    "default_title": "Ouvrir Synapse"
  },
  "background": {
    "scripts": [
      "background.js"
    ],
    "persistent": false
  },
  "content_scripts": [
    {
      "matches": [
        "<all_urls>"
      ],
      "css": [
        "style.css"
      ],
      "run_at": "document_idle"
    }
  ],
  "permissions": [
    "storage",
    "activeTab"
  ],
  "host_permissions": [
    "<all_urls>"
  ],
  "icons": {
    "48": "icons/vite.svg",
    "128": "icons/vite.svg"
  }
}

================================================================================
File: dist\popup.html
Size: 490 B
================================================================================

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Synapse Popup</title>
    <link rel="icon" type="image/svg+xml" href="icons/vite.svg" />
    <script type="module" crossorigin src="/assets/popup.js"></script>
    <link rel="stylesheet" crossorigin href="/assets/popup.css">
  </head>
  <body style="margin:0;padding:0;">
    <div id="root"></div>
  </body>
</html>


================================================================================
File: eslint.config.js
Size: 633 B
================================================================================

import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'
import { globalIgnores } from 'eslint/config'

export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      js.configs.recommended,
      tseslint.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
  },
])


================================================================================
File: manifest.json
Size: 0 B
================================================================================



================================================================================
File: popup.html
Size: 512 B
================================================================================

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Synapse Popup</title>
    <link rel="icon" type="image/svg+xml" href="icons/vite.svg" />
    <link rel="stylesheet" href="/src/index.css" />
    <link rel="stylesheet" href="/src/App.css" />
  </head>
  <body style="margin:0;padding:0;">
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>


================================================================================
File: public\manifest.json
Size: 667 B
================================================================================

{
  "manifest_version": 2,
  "name": "Ouvrir Synapse",
  "version": "1.0.0",
  "description": "Extension moderne avec React + Vite",
  "browser_action": {
    "default_title": "Ouvrir Synapse"
  },
  "background": {
    "scripts": [
      "background.js"
    ],
    "persistent": false
  },
  "content_scripts": [
    {
      "matches": [
        "<all_urls>"
      ],
      "css": [
        "style.css"
      ],
      "run_at": "document_idle"
    }
  ],
  "permissions": [
    "storage",
    "activeTab"
  ],
  "host_permissions": [
    "<all_urls>"
  ],
  "icons": {
    "48": "icons/vite.svg",
    "128": "icons/vite.svg"
  }
}

================================================================================
File: README-EXTENSION.md
Size: 659 B
================================================================================

Testing the extension (Chrome / Firefox)

1. Build the project:

```bash
npm run build
```

2. In Chrome:
- Open chrome://extensions
- Enable Developer mode
- Click "Load unpacked" and select the project root (the folder that contains `manifest.json`).
- Click the extension icon. The popup should open and display the React app.

3. In Firefox:
- Open about:debugging#/runtime/this-firefox
- Click "Load Temporary Add-on..." and select `manifest.json` in the project root.
- Click the extension icon.

Notes:
- The popup HTML and assets are served from `dist/` after build.
- If you change code, rebuild before reloading the extension.


================================================================================
File: README.md
Size: 2.34 kB
================================================================================

# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      // Other configs...

      // Remove tseslint.configs.recommended and replace with this
      ...tseslint.configs.recommendedTypeChecked,
      // Alternatively, use this for stricter rules
      ...tseslint.configs.strictTypeChecked,
      // Optionally, add this for stylistic rules
      ...tseslint.configs.stylisticTypeChecked,

      // Other configs...
    ],
    languageOptions: {
      parserOptions: {
        project: ['./tsconfig.node.json', './tsconfig.app.json'],
        tsconfigRootDir: import.meta.dirname,
      },
      // other options...
    },
  },
])
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      // Other configs...
      // Enable lint rules for React
      reactX.configs['recommended-typescript'],
      // Enable lint rules for React DOM
      reactDom.configs.recommended,
    ],
    languageOptions: {
      parserOptions: {
        project: ['./tsconfig.node.json', './tsconfig.app.json'],
        tsconfigRootDir: import.meta.dirname,
      },
      // other options...
    },
  },
])
```


================================================================================
File: src\App.css
Size: 1.56 kB
================================================================================

#root {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Reset default styles */
body {
  margin: 0;
  padding: 0;
  overflow: hidden;
}

/* Popup specific styles */
.popup-root {
  width: 100vw;
  height: 100vh;
  background: #f7f7f7;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.topbar {
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 8px;
  background: #ff9100;
}

.canvas {
  flex: 1;
  position: relative;
  overflow: hidden;
  background: #fff;
  margin: 4px;
  border-radius: 4px;
}

.toolbar {
  padding: 4px;
  display: flex;
  gap: 8px;
  background: #fff;
  border-bottom: 1px solid #eee;
}

.toolbar button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-width: 32px;
  height: 32px;
}

.toolbar_icon {
  width: 32px;
  aspect-ratio: 1/1;
  object-fit: cover;
}


================================================================================
File: src\App.tsx
Size: 5.47 kB
================================================================================

import React, { useCallback, useEffect, useRef, useState } from 'react'
import { Bubble } from './components/bubbles'
import type { BubbleData } from './types/bubble'
import './App.css'

function randId() { return Math.random().toString(36).slice(2,9) }

export default function App() {
  const [bubbles, setBubbles] = useState<BubbleData[]>([])
  const [draggingId, setDraggingId] = useState<string | null>(null)
  const [resizingId, setResizingId] = useState<string | null>(null)
  const canvasRef = useRef<HTMLDivElement | null>(null)
  const addTextIcon_URL = "/icons/addtext.png";
  const addImageIcon_URL = "/icons/addImage.png"
  const cleanIcon_URL = "/icons/clean.png"

  // keep popup open: this is a UI-level control; background opens a window, window isn't closed automatically

  useEffect(()=>{
    function onWindowMessage(_: MessageEvent){ /* reserved */ }
    window.addEventListener('message', onWindowMessage)
    return ()=> window.removeEventListener('message', onWindowMessage)
  },[])

  // Drop handling
  const onDrop = useCallback((e: React.DragEvent)=>{
    e.preventDefault()
    const rect = canvasRef.current?.getBoundingClientRect()
    const x = (e.clientX - (rect?.left||0))
    const y = (e.clientY - (rect?.top||0))

    // files (images)
    const file = e.dataTransfer?.files?.[0]
    if (file && file.type.startsWith('image/')){
      const reader = new FileReader()
      reader.onload = ()=>{
        setBubbles(prev=>[...prev,{ id: randId(), x, y, w: 200, h: 150, type: 'image', content: String(reader.result)}])
      }
      reader.readAsDataURL(file)
      return
    }

    // text
    const text = e.dataTransfer?.getData('text') || e.dataTransfer?.getData('text/plain')
    if (text) {
      setBubbles(prev=>[...prev,{ id: randId(), x, y, w: 220, h: 80, type: 'text', content: text }])
    }
  },[])

  const onDragOver = useCallback((e: React.DragEvent)=>{ e.preventDefault() },[])

  // bubble move handlers
  function startMove(id:string, e: React.MouseEvent){
    e.stopPropagation(); setDraggingId(id)
  }
  function onMouseMove(e: React.MouseEvent){
    if (!draggingId) return
    const rect = canvasRef.current?.getBoundingClientRect()
    if (!rect) return
    setBubbles(prev=>prev.map(b=> b.id===draggingId ? {...b, x: e.clientX-rect.left - b.w/2, y: e.clientY-rect.top - b.h/2} : b))
  }
  function endMove(){ setDraggingId(null); setResizingId(null) }

  // resizing
  function startResize(id:string, e: React.MouseEvent){ e.stopPropagation(); setResizingId(id) }
  function onMouseMoveResize(e: React.MouseEvent){
    if (!resizingId) return
    const rect = canvasRef.current?.getBoundingClientRect()
    if (!rect) return
    setBubbles(prev=>prev.map(b=> b.id===resizingId ? {...b, w: Math.max(40, e.clientX-rect.left - b.x), h: Math.max(24, e.clientY-rect.top - b.y)} : b))
  }

  // remove bubble
  function removeBubble(id:string){ setBubbles(prev=>prev.filter(b=>b.id!==id)) }

  // toolbar horizontal
  const Toolbar = ()=> (
    <div className="toolbar">
      <button onClick={()=>{ const t=prompt('Texte?'); if(t) setBubbles(prev=>[...prev,{ id: randId(), x:50, y:80, w:220, h:80, type:'text', content:t }]) }}>
        <img className="toolbar_icon" src={addTextIcon_URL} alt="Ajouter du texte" />
      </button>
      <button onClick={()=>{ const url=prompt('Image URL?'); if(url) setBubbles(prev=>[...prev,{ id: randId(), x:80, y:120, w:200, h:140, type:'image', content:url }]) }}>
        <img className="toolbar_icon" src={addImageIcon_URL} alt = "Ajouter une image" />
      </button>
      <button onClick={()=>{ setBubbles([]) }}>
        <img className = "toolbar_icon" src={cleanIcon_URL} alt="clean"/>
      </button>
    </div>
  )

  const handleMove = useCallback((id: string, x: number, y: number) => {
    setBubbles(prev => prev.map(b => b.id === id ? {...b, x, y} : b))
  }, [])

  const handleResize = useCallback((id: string, w: number, h: number) => {
    setBubbles(prev => prev.map(b => b.id === id ? {...b, w, h} : b))
  }, [])

  const handleContentChange = useCallback((id: string, content: string) => {
    setBubbles(prev => prev.map(b => b.id === id ? {...b, content} : b))
  }, [])

  return (
    <div className="popup-root">
      <div className="topbar">
        <div style={{display:'flex', alignItems:'center'}}>
          <img src="/vite.svg" alt="logo" style={{height:32, marginRight:8}}/>
          <strong style={{color:'#fff'}}>Synapse</strong>
        </div>
        <button title="Close" onClick={()=> window.close()} style={{background:'transparent', border:'none', color:'#fff', fontSize:18, cursor:'pointer', padding:'4px'}}>✕</button>
      </div>

      <Toolbar />

      <div ref={canvasRef} 
        className="canvas" 
        onDrop={onDrop} 
        onDragOver={onDragOver} 
        onMouseMove={(e) => { onMouseMove(e); onMouseMoveResize(e) }} 
        onMouseUp={endMove} 
        onMouseLeave={endMove}
      >
        {bubbles.map(bubble => (
          <Bubble
            key={bubble.id}
            data={bubble}
            onMove={handleMove}
            onResize={handleResize}
            onRemove={removeBubble}
            onContentChange={handleContentChange}
            onStartMove={startMove}
            onStartResize={startResize}
          />
        ))}
      </div>
    </div>
  )
}


================================================================================
File: src\background.ts
Size: 1.21 kB
================================================================================

import browser from 'webextension-polyfill';
import type { Browser } from 'webextension-polyfill';

declare const chrome : Browser;
const api: Browser = (typeof browser !== 'undefined') ? browser : chrome;

// background.js - open a persistent popup window when the action is clicked
function openWindow() {
  try {
    const url = api.runtime.getURL('popup.html');
    // Firefox: browser.windows.create; Chrome compatibility handled as well
    if (api.windows && api.windows.create) {
      api.windows.create({ url, type: 'popup', width: 900, height: 700 });
    } else if (api.runtime && api.runtime.openOptionsPage) {
      // fallback
      api.runtime.openOptionsPage();
    }
  } catch (e) {
    console.error('Failed to open window', e);
  }
}

if (api.action && api.action.onClicked) {
  api.action.onClicked.addListener(openWindow);
} else if (api.browserAction && api.browserAction.onClicked) {
  api.browserAction.onClicked.addListener(openWindow);
}

// keep worker alive with a simple alarm (no-op) to improve responsiveness in some browsers
if (api.alarms) {
  api.alarms.create('noop', { periodInMinutes: 59 });
  api.alarms.onAlarm.addListener(() => {});
}


================================================================================
File: src\components\bubble.css
Size: 1.82 kB
================================================================================

.bubble {
  position: absolute;
  background: #ddd;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Drag zone */
.bubble-drag {
  height: 20px;
  background: repeating-linear-gradient(
    to right,
    #fff,
    #fff 2px,
    transparent 2px,
    transparent 6px
  );
  cursor: move;
}

/* Content */
.bubble-content {
  flex: 1;
  padding: 12px;
  font-family: sans-serif;
  position: relative;
}

.bubble-text {
  width: 100%;
  height: 100%;
  outline: none;
  color: #000;
  font-size: 16px;
  cursor: text;
  word-break: break-word;
}

.bubble-image {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* Décorations oranges */
.bubble-dot {
  position: absolute;
  width: 10px;
  height: 10px;
  background: #ff9100;
  border-radius: 50%;
}

.bubble-dot.top {
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
}
.bubble-dot.bottom {
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
}
.bubble-dot.left {
  left: -10px;
  top: 50%;
  transform: translateY(-50%);
}
.bubble-dot.right {
  right: -10px;
  top: 50%;
  transform: translateY(-50%);
}

/* Remove button */
.bubble-remove {
  position: absolute;
  top: -8px;
  right: -8px;
  width: 22px;
  height: 22px;
  border: none;
  border-radius: 50%;
  background: #ff4444;
  color: #fff;
  cursor: pointer;
  font-size: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Resize handle (triangle) */
.bubble-resize {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 0;
  height: 0;
  border-left: 18px solid transparent;
  border-top: 18px solid transparent;
  border-right: 18px solid #ff9100;
  border-bottom: 18px solid #ff9100;
  cursor: nwse-resize;
}


================================================================================
File: src\components\bubbles.tsx
Size: 2.11 kB
================================================================================

import React, { useCallback } from "react";
import type { BubbleData } from "../types/bubble";
import "./bubble.css";

type BubbleProps = {
  data: BubbleData;
  onMove: (id: string, x: number, y: number) => void;
  onResize: (id: string, w: number, h: number) => void;
  onRemove: (id: string) => void;
  onContentChange: (id: string, content: string) => void;
  onStartMove: (id: string, e: React.MouseEvent) => void;
  onStartResize: (id: string, e: React.MouseEvent) => void;
};

export const Bubble: React.FC<BubbleProps> = ({
  data,
  onRemove,
  onContentChange,
  onStartMove,
  onStartResize,
}) => {
  const handleContentBlur = useCallback(
    (e: React.FocusEvent<HTMLDivElement>) => {
      const text = e.target.innerText;
      onContentChange(data.id, text);
    },
    [data.id, onContentChange]
  );

  return (
    <div
      className="bubble"
      style={{
        left: data.x,
        top: data.y,
        width: data.w,
        height: data.h,
      }}
    >
      {/* Zone de drag */}
      <div
        className="bubble-drag"
        onMouseDown={(e) => onStartMove(data.id, e)}
      />

      {/* Décorations */}
      <div className="bubble-dot top" />
      <div className="bubble-dot left" />
      <div className="bubble-dot right" />
      <div className="bubble-dot bottom" />

      {/* Bouton suppression */}
      <button className="bubble-remove" onClick={() => onRemove(data.id)}>
        ✕
      </button>

      {/* Contenu */}
      <div className="bubble-content">
        {data.type === "text" ? (
          <div
            contentEditable
            suppressContentEditableWarning
            className="bubble-text"
            onBlur={handleContentBlur}
          >
            {data.content}
          </div>
        ) : (
          <img src={data.content} alt="img" className="bubble-image" />
        )}
      </div>

      {/* Resize */}
      <div
        className="bubble-resize"
        onMouseDown={(e) => onStartResize(data.id, e)}
      />
    </div>
  );
};


================================================================================
File: src\components\link.css
Size: 0 B
================================================================================



================================================================================
File: src\components\links.tsx
Size: 142 B
================================================================================

import React from "react";
import type { LinkData } from "../types/link";
import "./link.css";

type LinkProps = {
    data: LinkData;
}

================================================================================
File: src\index.css
Size: 1.21 kB
================================================================================

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  width: 900px;
  height: 700px;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}


================================================================================
File: src\main.tsx
Size: 240 B
================================================================================

import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


================================================================================
File: src\types\bubble.ts
Size: 142 B
================================================================================

export type BubbleData = {
  id: string
  x: number
  y: number
  w: number
  h: number
  type: 'text' | 'image'
  content: string
}


================================================================================
File: src\types\link.ts
Size: 132 B
================================================================================

export type LinkData = {
  id: string
  idStartBubble: string
  idEndBubble: string
  type: 'arrow' | 'line'
  color: string
}

================================================================================
File: src\vite-env.d.ts
Size: 39 B
================================================================================

/// <reference types="vite/client" />


================================================================================
File: tsconfig.app.json
Size: 729 B
================================================================================

{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2022",
    "useDefineForClassFields": true,
    "lib": ["ES2022", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "erasableSyntaxOnly": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}


================================================================================
File: tsconfig.json
Size: 126 B
================================================================================

{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}


================================================================================
File: tsconfig.node.json
Size: 655 B
================================================================================

{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2023",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "erasableSyntaxOnly": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}


================================================================================
File: vite.config.ts
Size: 1.01 kB
================================================================================

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react-swc'
import { fileURLToPath } from 'url'
import { dirname, resolve } from 'path'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

export default defineConfig({
  plugins: [react()],
  build: {
    outDir: 'dist',
    rollupOptions: {
      input: {
        popup: resolve(__dirname, 'popup.html'),
        background: resolve(__dirname, 'src/background.ts'),
        // content: resolve(__dirname, 'src/content-script.ts')
      },
      output: {
        format: 'es',               // ✅ ESM moderne
        inlineDynamicImports: false,
        entryFileNames: (chunk) => {
          if (chunk.name === 'background') return 'background.js'
          if (chunk.name === 'content') return 'content-script.js'
          return 'assets/[name].js'
        },
        chunkFileNames: 'assets/[name].js',
        assetFileNames: 'assets/[name].[ext]'
      }
    }
  }
})
