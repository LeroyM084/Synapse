
================================================================================
File: dist\assets\popup.css
Size: 4.87 kB
================================================================================

:root{font-family:system-ui,Avenir,Helvetica,Arial,sans-serif;line-height:1.5;font-weight:400;color-scheme:light dark;color:#ffffffde;background-color:#242424;font-synthesis:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a{font-weight:500;color:#646cff;text-decoration:inherit}a:hover{color:#535bf2}body{margin:0;display:flex;place-items:center;width:900px;height:700px}h1{font-size:3.2em;line-height:1.1}button{border-radius:8px;border:1px solid transparent;padding:.6em 1.2em;font-size:1em;font-weight:500;font-family:inherit;background-color:#1a1a1a;cursor:pointer;transition:border-color .25s}button:hover{border-color:#646cff}button:focus,button:focus-visible{outline:4px auto -webkit-focus-ring-color}@media (prefers-color-scheme: light){:root{color:#213547;background-color:#fff}a:hover{color:#747bff}button{background-color:#f9f9f9}}html,body,#root{width:100%;height:100%;margin:0;padding:0;overflow:hidden}.logo{height:6em;padding:1.5em;will-change:filter;transition:filter .3s}.logo:hover{filter:drop-shadow(0 0 2em #646cffaa)}.logo.react:hover{filter:drop-shadow(0 0 2em #61dafbaa)}@keyframes logo-spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media (prefers-reduced-motion: no-preference){a:nth-of-type(2) .logo{animation:logo-spin infinite 20s linear}}.card{padding:2em}.read-the-docs{color:#888}body{margin:0;padding:0;overflow:hidden}.popup-root{width:100%;height:100%;background:#f7f7f7;display:flex;flex-direction:column;overflow:hidden}.topbar{height:48px;display:flex;align-items:center;justify-content:space-between;padding:0 8px;background:#ff9100}.canvas{flex:1;position:relative;overflow:hidden;background:#fff;margin:4px;border-radius:4px}.toolbar{padding:4px;display:flex;gap:8px;background:#fff;border-bottom:1px solid #eee}.toolbar button{display:flex;align-items:center;justify-content:center;padding:4px 8px;min-width:32px;height:32px}.toolbar_icon{width:32px;aspect-ratio:1/1;object-fit:cover}.editor-toolbar{align-items:center;padding:6px;gap:10px;background:linear-gradient(180deg,#fff,#fbfbfb);border-bottom:1px solid rgba(0,0,0,.06);box-shadow:0 1px #00000008}.text-format-group,.block-group{display:flex;gap:6px;align-items:center}.format-btn,.block-btn{background:#fff;border:1px solid rgba(0,0,0,.06);padding:6px 8px;border-radius:6px;cursor:pointer;font-weight:600;color:#333;box-shadow:0 1px #00000005;transition:background .12s,transform .06s}.format-btn:hover,.block-btn:hover{transform:translateY(-1px)}.format-btn.active,.block-btn.active{background:#ff9100;color:#fff;border-color:#0000000f;box-shadow:0 4px 12px #ff91002e}.divider{width:1px;background:#0000000f;height:28px;margin:0 8px;border-radius:2px}.toolbar_icon{width:20px;height:20px;object-fit:cover}.bubble-text h1,.bubble-text h2,.bubble-text p{margin:0;padding:0;color:#222}.bubble-text h1{font-size:20px;font-weight:700}.bubble-text h2{font-size:16px;font-weight:600;color:#333}.bubble-text p{font-size:14px;font-weight:400;color:#222;line-height:1.3}.bubble-text{outline:none;color:#222;padding:6px;height:100%;width:100%;overflow:auto}.bubble{font-size:calc(8px + .08vw + .08vh);position:absolute;background:#ddd;border-radius:8px;box-shadow:0 4px 12px #00000026}.bubble-drag{height:20px;background:repeating-linear-gradient(to right,#fff,#fff 2px,transparent 2px,transparent 6px);cursor:move}.bubble-content{flex:1;padding:12px;font-family:sans-serif;position:relative}.bubble-text{width:100%;height:100%;outline:none;color:#000;font-size:16px;cursor:text;word-break:break-word}.bubble-image{width:100%;height:100%;object-fit:contain;display:block;pointer-events:none}.bubble-dot{position:absolute;width:15px;height:15px;background:#ff9100;border-radius:50%}.bubble-dot.top{top:-10px;left:50%;transform:translate(-50%)}.bubble-dot.bottom{bottom:-10px;left:50%;transform:translate(-50%)}.bubble-dot.left{left:-10px;top:50%;transform:translateY(-50%)}.bubble-dot.right{right:-10px;top:50%;transform:translateY(-50%)}.bubble-remove{position:absolute;top:-7px;right:-5px;width:.5em;border:none;border-radius:50%;background:#f44;color:#fff;cursor:pointer;font-size:.5em;display:flex;align-items:center;justify-content:center}.bubble-resize{position:absolute;right:0;bottom:0;width:0;height:0;border-left:.8em solid transparent;border-top:.8em solid transparent;border-right:.8em solid #ff9100;border-bottom:.8em solid #ff9100;cursor:nwse-resize;border-radius:8px}.bubble-link{position:absolute;width:12px;height:12px;border-radius:50%;background:#ff9100f2;border:2px solid #fff;box-shadow:0 2px 6px #0000001f;pointer-events:auto}.bubble-link.top{top:-6px;left:50%;transform:translate(-50%)}.bubble-link.left{left:-6px;top:50%;transform:translateY(-50%)}.bubble-link.right{right:-6px;top:50%;transform:translateY(-50%)}.bubble-link.bottom{bottom:-6px;left:50%;transform:translate(-50%)}


================================================================================
File: dist\assets\purify.es.js
Size: 21.82 kB
================================================================================

/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */const{entries:Tt,setPrototypeOf:rt,isFrozen:Bt,getPrototypeOf:Yt,getOwnPropertyDescriptor:Xt}=Object;let{freeze:S,seal:y,create:_t}=Object,{apply:we,construct:xe}=typeof Reflect<"u"&&Reflect;S||(S=function(o){return o});y||(y=function(o){return o});we||(we=function(o,l,s){return o.apply(l,s)});xe||(xe=function(o,l){return new o(...l)});const le=R(Array.prototype.forEach),jt=R(Array.prototype.lastIndexOf),st=R(Array.prototype.pop),$=R(Array.prototype.push),Vt=R(Array.prototype.splice),fe=R(String.prototype.toLowerCase),Ne=R(String.prototype.toString),lt=R(String.prototype.match),q=R(String.prototype.replace),$t=R(String.prototype.indexOf),qt=R(String.prototype.trim),L=R(Object.prototype.hasOwnProperty),A=R(RegExp.prototype.test),K=Kt(TypeError);function R(r){return function(o){o instanceof RegExp&&(o.lastIndex=0);for(var l=arguments.length,s=new Array(l>1?l-1:0),T=1;T<l;T++)s[T-1]=arguments[T];return we(r,o,s)}}function Kt(r){return function(){for(var o=arguments.length,l=new Array(o),s=0;s<o;s++)l[s]=arguments[s];return xe(r,l)}}function a(r,o){let l=arguments.length>2&&arguments[2]!==void 0?arguments[2]:fe;rt&&rt(r,null);let s=o.length;for(;s--;){let T=o[s];if(typeof T=="string"){const N=l(T);N!==T&&(Bt(o)||(o[s]=N),T=N)}r[T]=!0}return r}function Zt(r){for(let o=0;o<r.length;o++)L(r,o)||(r[o]=null);return r}function C(r){const o=_t(null);for(const[l,s]of Tt(r))L(r,l)&&(Array.isArray(s)?o[l]=Zt(s):s&&typeof s=="object"&&s.constructor===Object?o[l]=C(s):o[l]=s);return o}function Z(r,o){for(;r!==null;){const s=Xt(r,o);if(s){if(s.get)return R(s.get);if(typeof s.value=="function")return R(s.value)}r=Yt(r)}function l(){return null}return l}const ct=S(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),be=S(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),Ie=S(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),Jt=S(["animate","color-profile","cursor","discard","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),Me=S(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","mprescripts"]),Qt=S(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),ft=S(["#text"]),ut=S(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","popover","popovertarget","popovertargetaction","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","wrap","xmlns","slot"]),Ce=S(["accent-height","accumulate","additive","alignment-baseline","amplitude","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","exponent","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","intercept","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","slope","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","tablevalues","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),mt=S(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),ce=S(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),en=y(/\{\{[\w\W]*|[\w\W]*\}\}/gm),tn=y(/<%[\w\W]*|[\w\W]*%>/gm),nn=y(/\$\{[\w\W]*/gm),on=y(/^data-[\-\w.\u00B7-\uFFFF]+$/),an=y(/^aria-[\-\w]+$/),Et=y(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),rn=y(/^(?:\w+script|data):/i),sn=y(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),gt=y(/^html$/i),ln=y(/^[a-z][.\w]*(-[.\w]+)+$/i);var pt=Object.freeze({__proto__:null,ARIA_ATTR:an,ATTR_WHITESPACE:sn,CUSTOM_ELEMENT:ln,DATA_ATTR:on,DOCTYPE_NAME:gt,ERB_EXPR:tn,IS_ALLOWED_URI:Et,IS_SCRIPT_OR_DATA:rn,MUSTACHE_EXPR:en,TMPLIT_EXPR:nn});const J={element:1,text:3,progressingInstruction:7,comment:8,document:9},cn=function(){return typeof window>"u"?null:window},fn=function(o,l){if(typeof o!="object"||typeof o.createPolicy!="function")return null;let s=null;const T="data-tt-policy-suffix";l&&l.hasAttribute(T)&&(s=l.getAttribute(T));const N="dompurify"+(s?"#"+s:"");try{return o.createPolicy(N,{createHTML(x){return x},createScriptURL(x){return x}})}catch{return console.warn("TrustedTypes policy "+N+" could not be created."),null}},dt=function(){return{afterSanitizeAttributes:[],afterSanitizeElements:[],afterSanitizeShadowDOM:[],beforeSanitizeAttributes:[],beforeSanitizeElements:[],beforeSanitizeShadowDOM:[],uponSanitizeAttribute:[],uponSanitizeElement:[],uponSanitizeShadowNode:[]}};function ht(){let r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:cn();const o=i=>ht(i);if(o.version="3.2.6",o.removed=[],!r||!r.document||r.document.nodeType!==J.document||!r.Element)return o.isSupported=!1,o;let{document:l}=r;const s=l,T=s.currentScript,{DocumentFragment:N,HTMLTemplateElement:x,Node:ue,Element:Pe,NodeFilter:G,NamedNodeMap:At=r.NamedNodeMap||r.MozNamedAttrMap,HTMLFormElement:St,DOMParser:Rt,trustedTypes:Q}=r,W=Pe.prototype,Ot=Z(W,"cloneNode"),yt=Z(W,"remove"),Lt=Z(W,"nextSibling"),Dt=Z(W,"childNodes"),ee=Z(W,"parentNode");if(typeof x=="function"){const i=l.createElement("template");i.content&&i.content.ownerDocument&&(l=i.content.ownerDocument)}let g,B="";const{implementation:me,createNodeIterator:Nt,createDocumentFragment:bt,getElementsByTagName:It}=l,{importNode:Mt}=s;let h=dt();o.isSupported=typeof Tt=="function"&&typeof ee=="function"&&me&&me.createHTMLDocument!==void 0;const{MUSTACHE_EXPR:pe,ERB_EXPR:de,TMPLIT_EXPR:Te,DATA_ATTR:Ct,ARIA_ATTR:wt,IS_SCRIPT_OR_DATA:xt,ATTR_WHITESPACE:ve,CUSTOM_ELEMENT:Pt}=pt;let{IS_ALLOWED_URI:ke}=pt,m=null;const Ue=a({},[...ct,...be,...Ie,...Me,...ft]);let d=null;const Fe=a({},[...ut,...Ce,...mt,...ce]);let f=Object.seal(_t(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),Y=null,_e=null,He=!0,Ee=!0,ze=!1,Ge=!0,P=!1,te=!0,w=!1,ge=!1,he=!1,v=!1,ne=!1,oe=!1,We=!0,Be=!1;const vt="user-content-";let Ae=!0,X=!1,k={},U=null;const Ye=a({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]);let Xe=null;const je=a({},["audio","video","img","source","image","track"]);let Se=null;const Ve=a({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),ie="http://www.w3.org/1998/Math/MathML",ae="http://www.w3.org/2000/svg",b="http://www.w3.org/1999/xhtml";let F=b,Re=!1,Oe=null;const kt=a({},[ie,ae,b],Ne);let re=a({},["mi","mo","mn","ms","mtext"]),se=a({},["annotation-xml"]);const Ut=a({},["title","style","font","a","script"]);let j=null;const Ft=["application/xhtml+xml","text/html"],Ht="text/html";let p=null,H=null;const zt=l.createElement("form"),$e=function(e){return e instanceof RegExp||e instanceof Function},ye=function(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!(H&&H===e)){if((!e||typeof e!="object")&&(e={}),e=C(e),j=Ft.indexOf(e.PARSER_MEDIA_TYPE)===-1?Ht:e.PARSER_MEDIA_TYPE,p=j==="application/xhtml+xml"?Ne:fe,m=L(e,"ALLOWED_TAGS")?a({},e.ALLOWED_TAGS,p):Ue,d=L(e,"ALLOWED_ATTR")?a({},e.ALLOWED_ATTR,p):Fe,Oe=L(e,"ALLOWED_NAMESPACES")?a({},e.ALLOWED_NAMESPACES,Ne):kt,Se=L(e,"ADD_URI_SAFE_ATTR")?a(C(Ve),e.ADD_URI_SAFE_ATTR,p):Ve,Xe=L(e,"ADD_DATA_URI_TAGS")?a(C(je),e.ADD_DATA_URI_TAGS,p):je,U=L(e,"FORBID_CONTENTS")?a({},e.FORBID_CONTENTS,p):Ye,Y=L(e,"FORBID_TAGS")?a({},e.FORBID_TAGS,p):C({}),_e=L(e,"FORBID_ATTR")?a({},e.FORBID_ATTR,p):C({}),k=L(e,"USE_PROFILES")?e.USE_PROFILES:!1,He=e.ALLOW_ARIA_ATTR!==!1,Ee=e.ALLOW_DATA_ATTR!==!1,ze=e.ALLOW_UNKNOWN_PROTOCOLS||!1,Ge=e.ALLOW_SELF_CLOSE_IN_ATTR!==!1,P=e.SAFE_FOR_TEMPLATES||!1,te=e.SAFE_FOR_XML!==!1,w=e.WHOLE_DOCUMENT||!1,v=e.RETURN_DOM||!1,ne=e.RETURN_DOM_FRAGMENT||!1,oe=e.RETURN_TRUSTED_TYPE||!1,he=e.FORCE_BODY||!1,We=e.SANITIZE_DOM!==!1,Be=e.SANITIZE_NAMED_PROPS||!1,Ae=e.KEEP_CONTENT!==!1,X=e.IN_PLACE||!1,ke=e.ALLOWED_URI_REGEXP||Et,F=e.NAMESPACE||b,re=e.MATHML_TEXT_INTEGRATION_POINTS||re,se=e.HTML_INTEGRATION_POINTS||se,f=e.CUSTOM_ELEMENT_HANDLING||{},e.CUSTOM_ELEMENT_HANDLING&&$e(e.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(f.tagNameCheck=e.CUSTOM_ELEMENT_HANDLING.tagNameCheck),e.CUSTOM_ELEMENT_HANDLING&&$e(e.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(f.attributeNameCheck=e.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),e.CUSTOM_ELEMENT_HANDLING&&typeof e.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements=="boolean"&&(f.allowCustomizedBuiltInElements=e.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),P&&(Ee=!1),ne&&(v=!0),k&&(m=a({},ft),d=[],k.html===!0&&(a(m,ct),a(d,ut)),k.svg===!0&&(a(m,be),a(d,Ce),a(d,ce)),k.svgFilters===!0&&(a(m,Ie),a(d,Ce),a(d,ce)),k.mathMl===!0&&(a(m,Me),a(d,mt),a(d,ce))),e.ADD_TAGS&&(m===Ue&&(m=C(m)),a(m,e.ADD_TAGS,p)),e.ADD_ATTR&&(d===Fe&&(d=C(d)),a(d,e.ADD_ATTR,p)),e.ADD_URI_SAFE_ATTR&&a(Se,e.ADD_URI_SAFE_ATTR,p),e.FORBID_CONTENTS&&(U===Ye&&(U=C(U)),a(U,e.FORBID_CONTENTS,p)),Ae&&(m["#text"]=!0),w&&a(m,["html","head","body"]),m.table&&(a(m,["tbody"]),delete Y.tbody),e.TRUSTED_TYPES_POLICY){if(typeof e.TRUSTED_TYPES_POLICY.createHTML!="function")throw K('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');if(typeof e.TRUSTED_TYPES_POLICY.createScriptURL!="function")throw K('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');g=e.TRUSTED_TYPES_POLICY,B=g.createHTML("")}else g===void 0&&(g=fn(Q,T)),g!==null&&typeof B=="string"&&(B=g.createHTML(""));S&&S(e),H=e}},qe=a({},[...be,...Ie,...Jt]),Ke=a({},[...Me,...Qt]),Gt=function(e){let t=ee(e);(!t||!t.tagName)&&(t={namespaceURI:F,tagName:"template"});const n=fe(e.tagName),c=fe(t.tagName);return Oe[e.namespaceURI]?e.namespaceURI===ae?t.namespaceURI===b?n==="svg":t.namespaceURI===ie?n==="svg"&&(c==="annotation-xml"||re[c]):!!qe[n]:e.namespaceURI===ie?t.namespaceURI===b?n==="math":t.namespaceURI===ae?n==="math"&&se[c]:!!Ke[n]:e.namespaceURI===b?t.namespaceURI===ae&&!se[c]||t.namespaceURI===ie&&!re[c]?!1:!Ke[n]&&(Ut[n]||!qe[n]):!!(j==="application/xhtml+xml"&&Oe[e.namespaceURI]):!1},D=function(e){$(o.removed,{element:e});try{ee(e).removeChild(e)}catch{yt(e)}},z=function(e,t){try{$(o.removed,{attribute:t.getAttributeNode(e),from:t})}catch{$(o.removed,{attribute:null,from:t})}if(t.removeAttribute(e),e==="is")if(v||ne)try{D(t)}catch{}else try{t.setAttribute(e,"")}catch{}},Ze=function(e){let t=null,n=null;if(he)e="<remove></remove>"+e;else{const u=lt(e,/^[\r\n\t ]+/);n=u&&u[0]}j==="application/xhtml+xml"&&F===b&&(e='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+e+"</body></html>");const c=g?g.createHTML(e):e;if(F===b)try{t=new Rt().parseFromString(c,j)}catch{}if(!t||!t.documentElement){t=me.createDocument(F,"template",null);try{t.documentElement.innerHTML=Re?B:c}catch{}}const _=t.body||t.documentElement;return e&&n&&_.insertBefore(l.createTextNode(n),_.childNodes[0]||null),F===b?It.call(t,w?"html":"body")[0]:w?t.documentElement:_},Je=function(e){return Nt.call(e.ownerDocument||e,e,G.SHOW_ELEMENT|G.SHOW_COMMENT|G.SHOW_TEXT|G.SHOW_PROCESSING_INSTRUCTION|G.SHOW_CDATA_SECTION,null)},Le=function(e){return e instanceof St&&(typeof e.nodeName!="string"||typeof e.textContent!="string"||typeof e.removeChild!="function"||!(e.attributes instanceof At)||typeof e.removeAttribute!="function"||typeof e.setAttribute!="function"||typeof e.namespaceURI!="string"||typeof e.insertBefore!="function"||typeof e.hasChildNodes!="function")},Qe=function(e){return typeof ue=="function"&&e instanceof ue};function I(i,e,t){le(i,n=>{n.call(o,e,t,H)})}const et=function(e){let t=null;if(I(h.beforeSanitizeElements,e,null),Le(e))return D(e),!0;const n=p(e.nodeName);if(I(h.uponSanitizeElement,e,{tagName:n,allowedTags:m}),te&&e.hasChildNodes()&&!Qe(e.firstElementChild)&&A(/<[/\w!]/g,e.innerHTML)&&A(/<[/\w!]/g,e.textContent)||e.nodeType===J.progressingInstruction||te&&e.nodeType===J.comment&&A(/<[/\w]/g,e.data))return D(e),!0;if(!m[n]||Y[n]){if(!Y[n]&&nt(n)&&(f.tagNameCheck instanceof RegExp&&A(f.tagNameCheck,n)||f.tagNameCheck instanceof Function&&f.tagNameCheck(n)))return!1;if(Ae&&!U[n]){const c=ee(e)||e.parentNode,_=Dt(e)||e.childNodes;if(_&&c){const u=_.length;for(let O=u-1;O>=0;--O){const M=Ot(_[O],!0);M.__removalCount=(e.__removalCount||0)+1,c.insertBefore(M,Lt(e))}}}return D(e),!0}return e instanceof Pe&&!Gt(e)||(n==="noscript"||n==="noembed"||n==="noframes")&&A(/<\/no(script|embed|frames)/i,e.innerHTML)?(D(e),!0):(P&&e.nodeType===J.text&&(t=e.textContent,le([pe,de,Te],c=>{t=q(t,c," ")}),e.textContent!==t&&($(o.removed,{element:e.cloneNode()}),e.textContent=t)),I(h.afterSanitizeElements,e,null),!1)},tt=function(e,t,n){if(We&&(t==="id"||t==="name")&&(n in l||n in zt))return!1;if(!(Ee&&!_e[t]&&A(Ct,t))){if(!(He&&A(wt,t))){if(!d[t]||_e[t]){if(!(nt(e)&&(f.tagNameCheck instanceof RegExp&&A(f.tagNameCheck,e)||f.tagNameCheck instanceof Function&&f.tagNameCheck(e))&&(f.attributeNameCheck instanceof RegExp&&A(f.attributeNameCheck,t)||f.attributeNameCheck instanceof Function&&f.attributeNameCheck(t))||t==="is"&&f.allowCustomizedBuiltInElements&&(f.tagNameCheck instanceof RegExp&&A(f.tagNameCheck,n)||f.tagNameCheck instanceof Function&&f.tagNameCheck(n))))return!1}else if(!Se[t]){if(!A(ke,q(n,ve,""))){if(!((t==="src"||t==="xlink:href"||t==="href")&&e!=="script"&&$t(n,"data:")===0&&Xe[e])){if(!(ze&&!A(xt,q(n,ve,"")))){if(n)return!1}}}}}}return!0},nt=function(e){return e!=="annotation-xml"&&lt(e,Pt)},ot=function(e){I(h.beforeSanitizeAttributes,e,null);const{attributes:t}=e;if(!t||Le(e))return;const n={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:d,forceKeepAttr:void 0};let c=t.length;for(;c--;){const _=t[c],{name:u,namespaceURI:O,value:M}=_,V=p(u),De=M;let E=u==="value"?De:qt(De);if(n.attrName=V,n.attrValue=E,n.keepAttr=!0,n.forceKeepAttr=void 0,I(h.uponSanitizeAttribute,e,n),E=n.attrValue,Be&&(V==="id"||V==="name")&&(z(u,e),E=vt+E),te&&A(/((--!?|])>)|<\/(style|title)/i,E)){z(u,e);continue}if(n.forceKeepAttr)continue;if(!n.keepAttr){z(u,e);continue}if(!Ge&&A(/\/>/i,E)){z(u,e);continue}P&&le([pe,de,Te],at=>{E=q(E,at," ")});const it=p(e.nodeName);if(!tt(it,V,E)){z(u,e);continue}if(g&&typeof Q=="object"&&typeof Q.getAttributeType=="function"&&!O)switch(Q.getAttributeType(it,V)){case"TrustedHTML":{E=g.createHTML(E);break}case"TrustedScriptURL":{E=g.createScriptURL(E);break}}if(E!==De)try{O?e.setAttributeNS(O,u,E):e.setAttribute(u,E),Le(e)?D(e):st(o.removed)}catch{z(u,e)}}I(h.afterSanitizeAttributes,e,null)},Wt=function i(e){let t=null;const n=Je(e);for(I(h.beforeSanitizeShadowDOM,e,null);t=n.nextNode();)I(h.uponSanitizeShadowNode,t,null),et(t),ot(t),t.content instanceof N&&i(t.content);I(h.afterSanitizeShadowDOM,e,null)};return o.sanitize=function(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=null,n=null,c=null,_=null;if(Re=!i,Re&&(i="<!-->"),typeof i!="string"&&!Qe(i))if(typeof i.toString=="function"){if(i=i.toString(),typeof i!="string")throw K("dirty is not a string, aborting")}else throw K("toString is not a function");if(!o.isSupported)return i;if(ge||ye(e),o.removed=[],typeof i=="string"&&(X=!1),X){if(i.nodeName){const M=p(i.nodeName);if(!m[M]||Y[M])throw K("root node is forbidden and cannot be sanitized in-place")}}else if(i instanceof ue)t=Ze("<!---->"),n=t.ownerDocument.importNode(i,!0),n.nodeType===J.element&&n.nodeName==="BODY"||n.nodeName==="HTML"?t=n:t.appendChild(n);else{if(!v&&!P&&!w&&i.indexOf("<")===-1)return g&&oe?g.createHTML(i):i;if(t=Ze(i),!t)return v?null:oe?B:""}t&&he&&D(t.firstChild);const u=Je(X?i:t);for(;c=u.nextNode();)et(c),ot(c),c.content instanceof N&&Wt(c.content);if(X)return i;if(v){if(ne)for(_=bt.call(t.ownerDocument);t.firstChild;)_.appendChild(t.firstChild);else _=t;return(d.shadowroot||d.shadowrootmode)&&(_=Mt.call(s,_,!0)),_}let O=w?t.outerHTML:t.innerHTML;return w&&m["!doctype"]&&t.ownerDocument&&t.ownerDocument.doctype&&t.ownerDocument.doctype.name&&A(gt,t.ownerDocument.doctype.name)&&(O="<!DOCTYPE "+t.ownerDocument.doctype.name+`>
`+O),P&&le([pe,de,Te],M=>{O=q(O,M," ")}),g&&oe?g.createHTML(O):O},o.setConfig=function(){let i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};ye(i),ge=!0},o.clearConfig=function(){H=null,ge=!1},o.isValidAttribute=function(i,e,t){H||ye({});const n=p(i),c=p(e);return tt(n,c,t)},o.addHook=function(i,e){typeof e=="function"&&$(h[i],e)},o.removeHook=function(i,e){if(e!==void 0){const t=jt(h[i],e);return t===-1?void 0:Vt(h[i],t,1)[0]}return st(h[i])},o.removeHooks=function(i){h[i]=[]},o.removeAllHooks=function(){h=dt()},o}var un=ht();export{un as default};


================================================================================
File: dist\assets\_commonjsHelpers.js
Size: 236 B
================================================================================

var o=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function l(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}export{o as c,l as g};


================================================================================
File: dist\background.js
Size: 10.26 kB
================================================================================

import{g as W}from"./assets/_commonjsHelpers.js";var w={exports:{}},U=w.exports,L;function D(){return L||(L=1,(function(u,Z){(function(p,k){k(u)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:U,function(p){if(!(globalThis.chrome&&globalThis.chrome.runtime&&globalThis.chrome.runtime.id))throw new Error("This script should only be loaded in a browser extension.");if(globalThis.browser&&globalThis.browser.runtime&&globalThis.browser.runtime.id)p.exports=globalThis.browser;else{const k="The message port closed before a response was received.",$=c=>{const y={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(y).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class E extends WeakMap{constructor(r,n=void 0){super(n),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const B=e=>e&&typeof e=="object"&&typeof e.then=="function",P=(e,r)=>(...n)=>{c.runtime.lastError?e.reject(new Error(c.runtime.lastError.message)):r.singleCallbackArg||n.length<=1&&r.singleCallbackArg!==!1?e.resolve(n[0]):e.resolve(n)},f=e=>e==1?"argument":"arguments",O=(e,r)=>function(g,...m){if(m.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${f(r.minArgs)} for ${e}(), got ${m.length}`);if(m.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${f(r.maxArgs)} for ${e}(), got ${m.length}`);return new Promise((a,A)=>{if(r.fallbackToNoCallback)try{g[e](...m,P({resolve:a,reject:A},r))}catch(s){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,s),g[e](...m),r.fallbackToNoCallback=!1,r.noCallback=!0,a()}else r.noCallback?(g[e](...m),a()):g[e](...m,P({resolve:a,reject:A},r))})},S=(e,r,n)=>new Proxy(r,{apply(g,m,a){return n.call(m,e,...a)}});let b=Function.call.bind(Object.prototype.hasOwnProperty);const h=(e,r={},n={})=>{let g=Object.create(null),m={has(A,s){return s in e||s in g},get(A,s,o){if(s in g)return g[s];if(!(s in e))return;let i=e[s];if(typeof i=="function")if(typeof r[s]=="function")i=S(e,e[s],r[s]);else if(b(n,s)){let x=O(s,n[s]);i=S(e,e[s],x)}else i=i.bind(e);else if(typeof i=="object"&&i!==null&&(b(r,s)||b(n,s)))i=h(i,r[s],n[s]);else if(b(n,"*"))i=h(i,r[s],n["*"]);else return Object.defineProperty(g,s,{configurable:!0,enumerable:!0,get(){return e[s]},set(x){e[s]=x}}),i;return g[s]=i,i},set(A,s,o,i){return s in g?g[s]=o:e[s]=o,!0},defineProperty(A,s,o){return Reflect.defineProperty(g,s,o)},deleteProperty(A,s){return Reflect.deleteProperty(g,s)}},a=Object.create(e);return new Proxy(a,m)},C=e=>({addListener(r,n,...g){r.addListener(e.get(n),...g)},hasListener(r,n){return r.hasListener(e.get(n))},removeListener(r,n){r.removeListener(e.get(n))}}),_=new E(e=>typeof e!="function"?e:function(n){const g=h(n,{},{getContent:{minArgs:0,maxArgs:0}});e(g)}),M=new E(e=>typeof e!="function"?e:function(n,g,m){let a=!1,A,s=new Promise(d=>{A=function(l){a=!0,d(l)}}),o;try{o=e(n,g,A)}catch(d){o=Promise.reject(d)}const i=o!==!0&&B(o);if(o!==!0&&!i&&!a)return!1;const x=d=>{d.then(l=>{m(l)},l=>{let v;l&&(l instanceof Error||typeof l.message=="string")?v=l.message:v="An unexpected error occurred",m({__mozWebExtensionPolyfillReject__:!0,message:v})}).catch(l=>{console.error("Failed to send onMessage rejected reply",l)})};return x(i?o:s),!0}),j=({reject:e,resolve:r},n)=>{c.runtime.lastError?c.runtime.lastError.message===k?r():e(new Error(c.runtime.lastError.message)):n&&n.__mozWebExtensionPolyfillReject__?e(new Error(n.message)):r(n)},R=(e,r,n,...g)=>{if(g.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${f(r.minArgs)} for ${e}(), got ${g.length}`);if(g.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${f(r.maxArgs)} for ${e}(), got ${g.length}`);return new Promise((m,a)=>{const A=j.bind(null,{resolve:m,reject:a});g.push(A),n.sendMessage(...g)})},q={devtools:{network:{onRequestFinished:C(_)}},runtime:{onMessage:C(M),onMessageExternal:C(M),sendMessage:R.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:R.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},T={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return y.privacy={network:{"*":T},services:{"*":T},websites:{"*":T}},h(c,q,y)};p.exports=$(chrome)}})})(w)),w.exports}var I=D();const N=W(I),t=typeof N<"u"?N:chrome;function F(){try{const u=t.runtime.getURL("popup.html");t.windows&&t.windows.create?t.windows.create({url:u,type:"popup",width:900,height:700}):t.runtime&&t.runtime.openOptionsPage&&t.runtime.openOptionsPage()}catch(u){console.error("Failed to open window",u)}}t.action&&t.action.onClicked?t.action.onClicked.addListener(F):t.browserAction&&t.browserAction.onClicked&&t.browserAction.onClicked.addListener(F);t.alarms&&(t.alarms.create("noop",{periodInMinutes:59}),t.alarms.onAlarm.addListener(()=>{}));


================================================================================
File: dist\manifest.json
Size: 616 B
================================================================================

{
  "manifest_version": 2,
  "name": "Ouvrir Synapse",
  "version": "1.0.0",
  "description": "Extension moderne avec React + Vite",
  "browser_action": {
    "default_title": "Ouvrir Synapse"
  },
  "background": {
    "scripts": ["background.js"],
    "type":"module",
    "persistent": false
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "css": ["style.css"],
      "run_at": "document_idle"
    }
  ],
  "permissions": ["storage", "activeTab"],
  "host_permissions": ["<all_urls>"],
  "icons": {
    "48": "icons/vite.svg",
    "128": "icons/vite.svg"
  }
}


================================================================================
File: dist\popup.html
Size: 490 B
================================================================================

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Synapse Popup</title>
    <link rel="icon" type="image/svg+xml" href="icons/vite.svg" />
    <script type="module" crossorigin src="/assets/popup.js"></script>
    <link rel="stylesheet" crossorigin href="/assets/popup.css">
  </head>
  <body style="margin:0;padding:0;">
    <div id="root"></div>
  </body>
</html>


================================================================================
File: eslint.config.js
Size: 633 B
================================================================================

import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'
import { globalIgnores } from 'eslint/config'

export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      js.configs.recommended,
      tseslint.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
  },
])


================================================================================
File: popup.html
Size: 512 B
================================================================================

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Synapse Popup</title>
    <link rel="icon" type="image/svg+xml" href="icons/vite.svg" />
    <link rel="stylesheet" href="/src/index.css" />
    <link rel="stylesheet" href="/src/App.css" />
  </head>
  <body style="margin:0;padding:0;">
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>


================================================================================
File: public\manifest.json
Size: 616 B
================================================================================

{
  "manifest_version": 2,
  "name": "Ouvrir Synapse",
  "version": "1.0.0",
  "description": "Extension moderne avec React + Vite",
  "browser_action": {
    "default_title": "Ouvrir Synapse"
  },
  "background": {
    "scripts": ["background.js"],
    "type":"module",
    "persistent": false
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "css": ["style.css"],
      "run_at": "document_idle"
    }
  ],
  "permissions": ["storage", "activeTab"],
  "host_permissions": ["<all_urls>"],
  "icons": {
    "48": "icons/vite.svg",
    "128": "icons/vite.svg"
  }
}


================================================================================
File: README-EXTENSION.md
Size: 659 B
================================================================================

Testing the extension (Chrome / Firefox)

1. Build the project:

```bash
npm run build
```

2. In Chrome:
- Open chrome://extensions
- Enable Developer mode
- Click "Load unpacked" and select the project root (the folder that contains `manifest.json`).
- Click the extension icon. The popup should open and display the React app.

3. In Firefox:
- Open about:debugging#/runtime/this-firefox
- Click "Load Temporary Add-on..." and select `manifest.json` in the project root.
- Click the extension icon.

Notes:
- The popup HTML and assets are served from `dist/` after build.
- If you change code, rebuild before reloading the extension.


================================================================================
File: README.md
Size: 2.34 kB
================================================================================

# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      // Other configs...

      // Remove tseslint.configs.recommended and replace with this
      ...tseslint.configs.recommendedTypeChecked,
      // Alternatively, use this for stricter rules
      ...tseslint.configs.strictTypeChecked,
      // Optionally, add this for stylistic rules
      ...tseslint.configs.stylisticTypeChecked,

      // Other configs...
    ],
    languageOptions: {
      parserOptions: {
        project: ['./tsconfig.node.json', './tsconfig.app.json'],
        tsconfigRootDir: import.meta.dirname,
      },
      // other options...
    },
  },
])
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      // Other configs...
      // Enable lint rules for React
      reactX.configs['recommended-typescript'],
      // Enable lint rules for React DOM
      reactDom.configs.recommended,
    ],
    languageOptions: {
      parserOptions: {
        project: ['./tsconfig.node.json', './tsconfig.app.json'],
        tsconfigRootDir: import.meta.dirname,
      },
      // other options...
    },
  },
])
```


================================================================================
File: src\App.css
Size: 3.19 kB
================================================================================

html, body, #root {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Reset default styles */
body {
  margin: 0;
  padding: 0;
  overflow: hidden;
}

/* Popup specific styles */
.popup-root {
  width: 100%;
  height: 100%;
  background: #f7f7f7;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.topbar {
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 8px;
  background: #ff9100;
}

.canvas {
  flex: 1;
  position: relative;
  overflow: hidden;
  background: #fff;
  margin: 4px;
  border-radius: 4px;
}

.toolbar {
  padding: 4px;
  display: flex;
  gap: 8px;
  background: #fff;
  border-bottom: 1px solid #eee;
}

.toolbar button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-width: 32px;
  height: 32px;
}

.toolbar_icon {
  width: 32px;
  aspect-ratio: 1/1;
  object-fit: cover;
}

/* Editor toolbar styles */
.editor-toolbar {
  align-items: center;
  padding: 6px;
  gap: 10px;
  background: linear-gradient(180deg,#ffffff,#fbfbfb);
  border-bottom: 1px solid rgba(0,0,0,0.06);
  box-shadow: 0 1px 0 rgba(0,0,0,0.03);
}

.text-format-group, .block-group {
  display: flex;
  gap: 6px;
  align-items: center;
}

.format-btn, .block-btn {
  background: #fff;
  border: 1px solid rgba(0,0,0,0.06);
  padding: 6px 8px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 600;
  color: #333;
  box-shadow: 0 1px 0 rgba(0,0,0,0.02);
  transition: background .12s, transform .06s;
}
.format-btn:hover, .block-btn:hover { transform: translateY(-1px) }
.format-btn.active, .block-btn.active {
  background: #ff9100;
  color: white;
  border-color: rgba(0,0,0,0.06);
  box-shadow: 0 4px 12px rgba(255,145,0,0.18);
}

/* divider */
.divider { width: 1px; background: rgba(0,0,0,0.06); height: 28px; margin: 0 8px; border-radius: 2px; }

/* small polish for toolbar icon buttons */
.toolbar_icon { width: 20px; height: 20px; object-fit: cover; }

/* content styles inside bubbles for the block elements */
.bubble-text h1, .bubble-text h2, .bubble-text p {
  margin: 0;
  padding: 0;
  color: #222;
}
.bubble-text h1 { font-size: 20px; font-weight: 700; }
.bubble-text h2 { font-size: 16px; font-weight: 600; color: #333; }
.bubble-text p { font-size: 14px; font-weight: 400; color: #222; line-height: 1.3; }

/* ensure contentEditable caret visible */
.bubble-text { outline: none; color: #222; padding: 6px; height: 100%; width: 100%; overflow: auto; }


================================================================================
File: src\App.tsx
Size: 14.49 kB
================================================================================

import React, { useCallback, useEffect, useRef, useState } from "react";
import { Bubble } from "./components/bubbles";
import { Links } from "./components/links";
import type { BubbleData } from "./types/bubble";
import type { LinkData } from "./types/link";
import "./App.css";

import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

function randId() {
  return Math.random().toString(36).slice(2, 9);
}

export default function App() {
  const [dragOffset, setDragOffset] = useState<{ x: number; y: number } | null>(null);
  // core state
  const [bubbles, setBubbles] = useState<BubbleData[]>([]);
  const [links, setLinks] = useState<LinkData[]>([]);
  const [tempLink, setTempLink] = useState<{
    startBubbleId: string;
    startSide: "top" | "bottom" | "left" | "right";
    x: number;
    y: number;
  } | null>(null);

  const [draggingId, setDraggingId] = useState<string | null>(null);
  const [resizingId, setResizingId] = useState<string | null>(null);
  const [focusNewBubbleId, setFocusNewBubbleId] = useState<string | null>(null);
  const canvasRef = useRef<HTMLDivElement | null>(null);

  const addTextIcon_URL = "/icons/addtext.png";
  const addImageIcon_URL = "/icons/addImage.png";
  const cleanIcon_URL = "/icons/clean.png";
  const exportPDF_URL = "/icons/exportPDF.png";

  // formatting UI state
  const [isBold, setIsBold] = useState(false);
  const [isItalic, setIsItalic] = useState(false);
  const [isUnderline, setIsUnderline] = useState(false);
  const [blockType, setBlockType] = useState<"H1" | "H2" | "P" | "">("");

  // keep popup open: placeholder listener
  useEffect(() => {
    function onWindowMessage(_: MessageEvent) {
      /* reserved */
    }
    window.addEventListener("message", onWindowMessage);
    return () => window.removeEventListener("message", onWindowMessage);
  }, []);

  // update formatting buttons when selection changes
  useEffect(() => {
    const updateState = () => {
      try {
        setIsBold(document.queryCommandState("bold"));
        setIsItalic(document.queryCommandState("italic"));
        setIsUnderline(document.queryCommandState("underline"));

        const sel = window.getSelection();
        if (!sel || !sel.anchorNode) {
          setBlockType("");
          return;
        }
        let el =
          sel.anchorNode.nodeType === 3
            ? (sel.anchorNode.parentElement as HTMLElement)
            : (sel.anchorNode as HTMLElement);
        while (el && el !== document.body) {
          const tag = el.tagName;
          if (tag === "H1" || tag === "H2" || tag === "P") {
            setBlockType(tag as any);
            return;
          }
          el = el.parentElement as HTMLElement;
        }
        setBlockType("P");
      } catch {
        /* ignore */
      }
    };
    document.addEventListener("selectionchange", updateState);
    return () => document.removeEventListener("selectionchange", updateState);
  }, []);

  const exec = useCallback((cmd: string, value?: string) => {
    try {
      document.execCommand(cmd, false, value);
      setIsBold(document.queryCommandState("bold"));
      setIsItalic(document.queryCommandState("italic"));
      setIsUnderline(document.queryCommandState("underline"));
    } catch {
      console.warn("execCommand failed");
    }
  }, []);

  const toggleBold = useCallback(() => exec("bold"), [exec]);
  const toggleItalic = useCallback(() => exec("italic"), [exec]);
  const toggleUnderline = useCallback(() => exec("underline"), [exec]);
  const applyBlock = useCallback(
    (tag: "H1" | "H2" | "P") => {
      exec("formatBlock", tag);
      setBlockType(tag);
    },
    [exec]
  );

  // Drop handling (single implementation)
  const onDrop = useCallback((e: React.DragEvent) => {
    e.preventDefault();
    const rect = canvasRef.current?.getBoundingClientRect();
    const x = e.clientX - (rect?.left || 0);
    const y = e.clientY - (rect?.top || 0);

    const file = e.dataTransfer?.files?.[0];
    if (file && file.type.startsWith("image/")) {
      const reader = new FileReader();
      reader.onload = () => {
        const img = new window.Image();
        img.onload = () => {
          setBubbles((prev) => [
            ...prev,
            { id: randId(), x, y, w: img.width, h: img.height, w_init: img.width, h_init: img.height, type: "image", content: String(reader.result) },
          ]);
        };
        img.src = String(reader.result);
      };
      reader.readAsDataURL(file);
      return;
    }

    const text = e.dataTransfer?.getData("text") || e.dataTransfer?.getData("text/plain");
    if (text) {
      setBubbles((prev) => [
        ...prev,
        { id: randId(), x, y, w: 220, h: 80, type: "text", content: text },
      ]);
    }
  }, []);

  const onDragOver = useCallback((e: React.DragEvent) => {
    e.preventDefault();
  }, []);

  // move/resize handlers
  function startMove(id: string, e: React.MouseEvent) {
    e.stopPropagation();
    setDraggingId(id);

    // Met la bulle au premier plan (fin du tableau)
    setBubbles(prev => {
      const idx = prev.findIndex(b => b.id === id);
      if (idx === -1) return prev;
      const bubble = prev[idx];
      const newArr = [...prev.slice(0, idx), ...prev.slice(idx + 1), bubble];
      return newArr;
    });

    const rect = canvasRef.current?.getBoundingClientRect();
    const bubble = bubbles.find(b => b.id === id);
    if (rect && bubble) {
      const offsetX = e.clientX - rect.left - bubble.x;
      const offsetY = e.clientY - rect.top - bubble.y;
      setDragOffset({ x: offsetX, y: offsetY });
    }
  }
  function startResize(id: string, e: React.MouseEvent) {
    e.stopPropagation();
    setResizingId(id);
  }

  function onMouseMove(e: React.MouseEvent) {
    const rect = canvasRef.current?.getBoundingClientRect();
    if (!rect) return;

    if (draggingId && dragOffset) {
      const toolbarHeight = 5; // hauteur de la toolbar
      const canvasHeight = rect.height;
      const canvasWidth = rect.width;

      setBubbles((prev) =>
        prev.map((b) => {
          if (b.id !== draggingId) return b;
          let newX = e.clientX - rect.left - dragOffset.x;
          let newY = e.clientY - rect.top - dragOffset.y;

          // Clamp X
          newX = Math.max(0, Math.min(newX, canvasWidth - b.w));
          // Clamp Y (empêche sous la toolbar)
          newY = Math.max(toolbarHeight, Math.min(newY, canvasHeight - b.h));

          return { ...b, x: newX, y: newY };
        })
      );
    }

    if (resizingId) {
      setBubbles((prev) =>
        prev.map((b) =>
          b.id === resizingId
            ? { ...b, w: Math.max(40, e.clientX - rect.left - b.x), h: Math.max(24, e.clientY - rect.top - b.y) }
            : b
        )
      );
    }

    if (tempLink) {
      setTempLink({ ...tempLink, x: e.clientX - rect.left, y: e.clientY - rect.top });
    }
  }

  function endMove() {
  setDraggingId(null);
  setResizingId(null);
  setTempLink(null);
  setDragOffset(null);
  }

  // create bubble & focus logic
  const createNewTextBubble = useCallback(() => {
    const newBubble: BubbleData = { id: randId(), type: "text", content: "", x: 100, y: 100, w: 200, h: 100 };
    setBubbles((prev) => [...prev, newBubble]);
    return newBubble.id;
  }, []);

  // bubble modifications
  const handleMove = useCallback((id: string, x: number, y: number) => {
    const canvas = canvasRef.current;
    if (!canvas) return;
    const rect = canvas.getBoundingClientRect();
    const toolbarHeight = 48;
    const canvasWidth = rect.width;
    const canvasHeight = rect.height;

    setBubbles((prev) =>
      prev.map((b) => {
        if (b.id !== id) return b;
        let newX = Math.max(0, Math.min(x, canvasWidth - b.w));
        let newY = Math.max(toolbarHeight, Math.min(y, canvasHeight - b.h));
        return { ...b, x: newX, y: newY };
      })
    );
  }, []);
  const handleResize = useCallback((id: string, w: number, h: number) => {
    setBubbles((prev) => prev.map((b) => {
      if (b.id !== id) return b;
      if (b.type === "image") {
        const minW = b.w_init ?? b.w;
        const minH = b.h_init ?? b.h;
        return { ...b, w: Math.max(w, minW), h: Math.max(h, minH) };
      }
      return { ...b, w, h };
    }));
  }, []);
  const handleContentChange = useCallback((id: string, content: string) => {
    setBubbles((prev) => prev.map((b) => (b.id === id ? { ...b, content } : b)));
  }, []);

  // links
  function onStartLink(bubbleId: string, side: string, e: React.MouseEvent) {
    e.stopPropagation();
    e.preventDefault();
    const rect = canvasRef.current?.getBoundingClientRect();
    if (!rect) {
      console.warn('onStartLink: no canvas rect');
      return;
    }
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    console.log('onStartLink', { bubbleId, side, x, y });
    setTempLink({ startBubbleId: bubbleId, startSide: side as any, x, y });
  }

  function onFinishLink(bubbleId: string, side: string, e: React.MouseEvent) {
    e.stopPropagation();
    e.preventDefault();
    console.log('onFinishLink', { bubbleId, side, tempLink });
    if (!tempLink) return;
    const type = window.confirm("Voulez-vous une flèche ? (OK = flèche, Annuler = ligne)") ? "arrow" : "line";
    const newLink: LinkData = {
      id: randId(),
      idStartBubble: tempLink.startBubbleId,
      idEndBubble: bubbleId,
      startSide: tempLink.startSide,
      endSide: side as any,
      type,
      color: "#ff9100",
    };
    setLinks(prev => [...prev, newLink]);
    setTempLink(null);
  }

  function removeBubble(id: string) {
    setBubbles((prev) => prev.filter((b) => b.id !== id));
  }
  function removeLink(id: string) {
    setLinks((prev) => prev.filter((l) => l.id !== id));
  }

  //export pdf 

const exportPDF = async () => {
  try {

    const canvasDiv = canvasRef.current;
    if (!canvasDiv) return;
    const canvasImage = await html2canvas(canvasDiv);
    const imgData = canvasImage.toDataURL("image/png");
    const pdf = new jsPDF({
      orientation: "landscape",
      unit: "px",
      format: [canvasDiv.offsetWidth, canvasDiv.offsetHeight],
    });
    pdf.addImage(
      imgData,
      "PNG",
      0,
      0,
      canvasDiv.offsetWidth,
      canvasDiv.offsetHeight
    );
    pdf.save("synapse_canvas.pdf");
  } catch (err) {
    alert("Erreur export PDF: " + err);
    console.error(err);
  }
};

  // Toolbar UI
  const Toolbar = () => (
    <div className="toolbar editor-toolbar" role="toolbar" aria-label="Text editor toolbar">
      <div className="text-format-group">
        <button className={`format-btn ${isBold ? "active" : ""}`} title="Gras (Ctrl/Cmd+B)" onMouseDown={(e) => e.preventDefault()} onClick={toggleBold}>B</button>
        <button className={`format-btn ${isItalic ? "active" : ""}`} title="Italique (Ctrl/Cmd+I)" onMouseDown={(e) => e.preventDefault()} onClick={toggleItalic}>I</button>
        <button className={`format-btn ${isUnderline ? "active" : ""}`} title="Souligné (Ctrl/Cmd+U)" onMouseDown={(e) => e.preventDefault()} onClick={toggleUnderline}>U</button>
      </div>

      <div className="divider" />

      <div className="block-group" role="group" aria-label="Paragraph style">
        <button className={`block-btn ${blockType === "H1" ? "active" : ""}`} title="Titre" onMouseDown={(e) => e.preventDefault()} onClick={() => applyBlock("H1")}>Titre</button>
        <button className={`block-btn ${blockType === "H2" ? "active" : ""}`} title="Sous-titre" onMouseDown={(e) => e.preventDefault()} onClick={() => applyBlock("H2")}>Sous-titre</button>
        <button className={`block-btn ${blockType === "P" ? "active" : ""}`} title="Corps" onMouseDown={(e) => e.preventDefault()} onClick={() => applyBlock("P")}>Corps</button>
      </div>

      <div style={{ flex: 1 }} />

      <div style={{ display: "flex", gap: 8 }}>
        <button
          onClick={() => {
            const newBubbleId = createNewTextBubble();
            setFocusNewBubbleId(newBubbleId);
          }}
        >
          <img className="toolbar_icon" src={addTextIcon_URL} alt="Ajouter du texte" />
        </button>

        <button
          onClick={() => {
            const url = prompt("Image URL?");
            if (url) setBubbles((prev) => [...prev, { id: randId(), x: 80, y: 120, w: 200, h: 140, type: "image", content: url }]);
          }}
        >
          <img className="toolbar_icon" src={addImageIcon_URL} alt="Ajouter une image" />
        </button>

        <button onClick={() => setBubbles([])}>
          <img className="toolbar_icon" src={cleanIcon_URL} alt="clean" />
        </button>
        <button onClick={exportPDF}>
          <img className="toolbar_icon" src={exportPDF_URL} alt="clean" />
        </button>
      </div>
    </div>
  );

  return (
    <div className="popup-root">
      <div className="topbar">
        <div style={{ display: "flex", alignItems: "center" }}>
          <img src="/vite.svg" alt="logo" style={{ height: 32, marginRight: 8 }} />
          <strong style={{ color: "#fff" }}>Synapse</strong>
        </div>
        <button title="Close" onClick={() => window.close()} style={{ background: "transparent", border: "none", color: "#fff", fontSize: 18, cursor: "pointer", padding: "4px" }}>
          ✕
        </button>
      </div>

      <Toolbar />

      <div ref={canvasRef} className="canvas" onDrop={onDrop} onDragOver={onDragOver} onMouseMove={onMouseMove} onMouseUp={endMove} onMouseLeave={endMove}>
        <Links links={links} bubbles={bubbles} tempLink={tempLink} onRemoveLink={removeLink} />

        {bubbles.map((bubble) => (
          <Bubble
            key={bubble.id}
            data={bubble}
            onMove={handleMove}
            onResize={handleResize}
            onRemove={removeBubble}
            onContentChange={handleContentChange}
            onStartMove={startMove}
            onStartResize={startResize}
            onStartLink={onStartLink}
            onFinishLink={onFinishLink}
          />
        ))}
      </div>
    </div>
  );
}


================================================================================
File: src\background.ts
Size: 1.2 kB
================================================================================

import browser from 'webextension-polyfill';
import type { Browser } from 'webextension-polyfill';

declare const chrome: Browser
const api: any = typeof browser !== 'undefined' ? browser : chrome;

// background.js - open a persistent popup window when the action is clicked
function openWindow() {
  try {
    const url = api.runtime.getURL('popup.html');
    // Firefox: browser.windows.create; Chrome compatibility handled as well
    if (api.windows && api.windows.create) {
      api.windows.create({ url, type: 'popup', width: 900, height: 700 });
    } else if (api.runtime && api.runtime.openOptionsPage) {
      // fallback
      api.runtime.openOptionsPage();
    }
  } catch (e) {
    console.error('Failed to open window', e);  
  }
}

if (api.action && api.action.onClicked) {
  api.action.onClicked.addListener(openWindow);
} else if (api.browserAction && api.browserAction.onClicked) {
  api.browserAction.onClicked.addListener(openWindow);
}

// keep worker alive with a simple alarm (no-op) to improve responsiveness in some browsers
if (api.alarms) {
  api.alarms.create('noop', { periodInMinutes: 59 });
  api.alarms.onAlarm.addListener(() => {});
}


================================================================================
File: src\components\bubble.css
Size: 2.56 kB
================================================================================

.bubble {
  font-size: calc(8px + 0.08vw + 0.08vh);
  position: absolute;
  background: #ddd;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Drag zone */
.bubble-drag {
  height: 20px;
  background: repeating-linear-gradient(
    to right,
    #fff,
    #fff 2px,
    transparent 2px,
    transparent 6px
  );
  cursor: move;
}

/* Content */
.bubble-content {
  flex: 1;
  padding: 12px;
  font-family: sans-serif;
  position: relative;
}

.bubble-text {
  width: 100%;
  height: 100%;
  outline: none;
  color: #000;
  font-size: 16px;
  cursor: text;
  word-break: break-word;
}

.bubble-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
  display: block;
  pointer-events: none;
}

/* Décorations oranges */
.bubble-dot {
  position: absolute;
  width: 15px;
  height: 15px;
  background: #ff9100;
  border-radius: 50%;
}

.bubble-dot.top {
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
}
.bubble-dot.bottom {
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
}
.bubble-dot.left {
  left: -10px;
  top: 50%;
  transform: translateY(-50%);
}
.bubble-dot.right {
  right: -10px;
  top: 50%;
  transform: translateY(-50%);
}

/* Remove button */
.bubble-remove {
  position: absolute;
  top: -7px;
  right: -5px;
  width: 0.5em;

  border: none;
  border-radius: 50%;
  background: #ff4444;
  color: #fff;
  cursor: pointer;
  font-size: 0.5em;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Resize handle (triangle) */
.bubble-resize {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 0;
  height: 0;
  border-left: 0.8em solid transparent;
  border-top: 0.8em solid transparent;
  border-right: 0.8em solid #ff9100;
  border-bottom: 0.8em solid #ff9100;
  cursor: nwse-resize;
  border-radius: 8px;
}
.bubble-link {
  position: absolute;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: rgba(255,145,0,0.95); /* visible for debug; set lower opacity or transparent later */
  border: 2px solid #fff;
  box-shadow: 0 2px 6px rgba(0,0,0,0.12);
  pointer-events: auto;
}

/* position helpers (if you already have them) */
.bubble-link.top { top: -6px; left: 50%; transform: translateX(-50%); }
.bubble-link.left { left: -6px; top: 50%; transform: translateY(-50%); }
.bubble-link.right { right: -6px; top: 50%; transform: translateY(-50%); }
.bubble-link.bottom { bottom: -6px; left: 50%; transform: translateX(-50%); }


================================================================================
File: src\components\bubbles.tsx
Size: 4.62 kB
================================================================================

import React, { useCallback, useEffect, useRef } from "react";
import type { BubbleData } from "../types/bubble";
import "./bubble.css";

type BubbleProps = {
  data: BubbleData;
  onMove: (id: string, x: number, y: number) => void;
  onResize: (id: string, w: number, h: number) => void;
  onRemove: (id: string) => void;
  onContentChange: (id: string, content: string) => void;
  onStartMove: (id: string, e: React.MouseEvent) => void;
  onStartResize: (id: string, e: React.MouseEvent) => void;
  onStartLink: (id: string, side: string, e: React.MouseEvent) => void;
  onFinishLink: (id: string, side: string, e: React.MouseEvent) => void;
};

export const Bubble: React.FC<BubbleProps> = ({
  data,
  onRemove,
  onContentChange,
  onStartMove,
  onStartResize,
  onStartLink,
  onFinishLink,
}) => {
  const textRef = useRef<HTMLDivElement | null>(null);

  // focus le contenu quand c'est une nouvelle bulle texte vide
  useEffect(() => {
    if (data.type === "text" && data.content === "" && textRef.current) {
      const el = textRef.current;
      el.focus();
      const range = document.createRange();
      range.selectNodeContents(el);
      range.collapse(true);
      const sel = window.getSelection();
      if (sel) {
        sel.removeAllRanges();
        sel.addRange(range);
      }
    }
  }, [data.type, data.content]);

  const handleContentBlur = useCallback(
    (e: React.FocusEvent<HTMLDivElement>) => {
      const text = (e.target as HTMLDivElement).innerText;
      onContentChange(data.id, text);
    },
    [data.id, onContentChange]
  );

  return (
    <div
      className="bubble"
      style={{
        left: data.x,
        top: data.y,
        width: data.w,
        height: data.h,
        fontSize: Math.max(12, Math.min(data.w, data.h) * 0.1) + "px"
      }}
    >
      {/* central drag handle (invisible bar or small handle) */}
      <div
        className="bubble-drag"
        onMouseDown={(e) => onStartMove(data.id, e)}
        title="Glisser pour déplacer"
      />

      {/* move handles (small orange circles) */}
          {/* Removed duplicate move handles */}

      {/* link handles: use pointer events and stop propagation */}
      <div
        className="bubble-link top"
        onPointerDown={(e) => { e.stopPropagation(); e.preventDefault(); onStartLink(data.id, "top", e as unknown as React.MouseEvent); }}
        onPointerUp={(e) => { e.stopPropagation(); e.preventDefault(); onFinishLink(data.id, "top", e as unknown as React.MouseEvent); }}
      />
      <div
        className="bubble-link left"
        onPointerDown={(e) => { e.stopPropagation(); e.preventDefault(); onStartLink(data.id, "left", e as unknown as React.MouseEvent); }}
        onPointerUp={(e) => { e.stopPropagation(); e.preventDefault(); onFinishLink(data.id, "left", e as unknown as React.MouseEvent); }}
      />
      <div
        className="bubble-link right"
        onPointerDown={(e) => { e.stopPropagation(); e.preventDefault(); onStartLink(data.id, "right", e as unknown as React.MouseEvent); }}
        onPointerUp={(e) => { e.stopPropagation(); e.preventDefault(); onFinishLink(data.id, "right", e as unknown as React.MouseEvent); }}
      />
      <div
        className="bubble-link bottom"
        onPointerDown={(e) => { e.stopPropagation(); e.preventDefault(); onStartLink(data.id, "bottom", e as unknown as React.MouseEvent); }}
        onPointerUp={(e) => { e.stopPropagation(); e.preventDefault(); onFinishLink(data.id, "bottom", e as unknown as React.MouseEvent); }}
      />

      {/* remove button */}
      <button
        className="bubble-remove"
        onClick={() => onRemove(data.id)}
        aria-label="Supprimer la bulle"
      >
        ✕
      </button>

      <div className="bubble-content">
        {data.type === "text" ? (
          <div
            ref={textRef}
            contentEditable
            suppressContentEditableWarning
            className="bubble-text"
            onBlur={handleContentBlur}
          >
            {data.content}
          </div>
        ) : (
          <img src={data.content} alt="img" className="bubble-image" style={{ width: "100%", height: "100%", objectFit: "contain", display: "block", pointerEvents: "none" }} draggable={false} />
        )}
      </div>

      {/* resize handle (bottom-right) */}
      <div
        className="bubble-resize"
        onMouseDown={(e) => onStartResize(data.id, e)}
        title="Redimensionner"
      />
    </div>
  );
};


================================================================================
File: src\components\link.css
Size: 0 B
================================================================================



================================================================================
File: src\components\links.tsx
Size: 2.97 kB
================================================================================

import React from "react";
import type { LinkData } from "../types/link";
import type { BubbleData } from "../types/bubble";
import "./link.css";

type TempLink = {
  startBubbleId: string;
  startSide: "top" | "bottom" | "left" | "right";
  x: number;
  y: number;
};

type LinksProps = {
  links: LinkData[];
  bubbles: BubbleData[];
  tempLink?: TempLink | null;
  onRemoveLink: (id: string) => void;
};

function getDotPosition(
  bubble: BubbleData,
  side: "top" | "bottom" | "left" | "right"
) {
  switch (side) {
    case "top":
      return { x: bubble.x + bubble.w / 2, y: bubble.y };
    case "bottom":
      return { x: bubble.x + bubble.w / 2, y: bubble.y + bubble.h };
    case "left":
      return { x: bubble.x, y: bubble.y + bubble.h / 2 };
    case "right":
      return { x: bubble.x + bubble.w, y: bubble.y + bubble.h / 2 };
  }
}

export const Links: React.FC<LinksProps> = ({
  links,
  bubbles,
  tempLink,
  onRemoveLink,
}) => {
  return (
    <svg
      className="links-layer"
      style={{
        position: "absolute",
        width: "100%",
        height: "100%",
        top: 0,
        left: 0,
        pointerEvents: "none",
      }}
    >
      {links.map((link) => {
        const startBubble = bubbles.find((b) => b.id === link.idStartBubble);
        const endBubble = bubbles.find((b) => b.id === link.idEndBubble);
        if (!startBubble || !endBubble) return null;

        const start = getDotPosition(startBubble, link.startSide);
        const end = getDotPosition(endBubble, link.endSide);

        return (
          <line
            key={link.id}
            x1={start.x}
            y1={start.y}
            x2={end.x}
            y2={end.y}
            stroke={link.color}
            strokeWidth="2"
            markerEnd={link.type === "arrow" ? "url(#arrowhead)" : undefined}
            style={{ cursor: "pointer", pointerEvents: "auto" }}
            onContextMenu={(e) => {
              e.preventDefault();
              onRemoveLink(link.id);
            }}
          />
        );
      })}

      {tempLink && (() => {
        const startBubble = bubbles.find(
          (b) => b.id === tempLink.startBubbleId
        );
        if (!startBubble) return null;
        const start = getDotPosition(startBubble, tempLink.startSide);

        return (
          <line
            x1={start.x}
            y1={start.y}
            x2={tempLink.x}
            y2={tempLink.y}
            stroke="#ff9100"
            strokeWidth="2"
            strokeDasharray="4"
          />
        );
      })()}

      <defs>
        <marker
          id="arrowhead"
          markerWidth="10"
          markerHeight="7"
          refX="10"
          refY="3.5"
          orient="auto"
        >
          <polygon points="0 0, 10 3.5, 0 7" fill="#ff9100" />
        </marker>
      </defs>
    </svg>
  );
};


================================================================================
File: src\index.css
Size: 1.21 kB
================================================================================

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  width: 900px;
  height: 700px;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}


================================================================================
File: src\main.tsx
Size: 240 B
================================================================================

import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)


================================================================================
File: src\types\bubble.ts
Size: 180 B
================================================================================

export type BubbleData = {
  id: string
  x: number
  y: number
  w: number
  h: number
  w_init?: number
  h_init?: number
  type: 'text' | 'image'
  content: string
}


================================================================================
File: src\types\link.ts
Size: 230 B
================================================================================

export type LinkData = {
  id: string
  idStartBubble: string
  idEndBubble: string
  startSide: 'top' | 'bottom' | 'left' | 'right'
  endSide: 'top' | 'bottom' | 'left' | 'right'
  type: 'arrow' | 'line'
  color: string
}

================================================================================
File: src\vite-env.d.ts
Size: 39 B
================================================================================

/// <reference types="vite/client" />


================================================================================
File: tsconfig.app.json
Size: 729 B
================================================================================

{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2022",
    "useDefineForClassFields": true,
    "lib": ["ES2022", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "erasableSyntaxOnly": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}


================================================================================
File: tsconfig.json
Size: 126 B
================================================================================

{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}


================================================================================
File: tsconfig.node.json
Size: 655 B
================================================================================

{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2023",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "erasableSyntaxOnly": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}


================================================================================
File: vite.config.ts
Size: 1.03 kB
================================================================================

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react-swc'
import { fileURLToPath } from 'url'
import { dirname, resolve } from 'path'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

export default defineConfig({
  plugins: [react()],
  build: {
    minify: false,
    outDir: 'dist',
    rollupOptions: {
      input: {
        popup: resolve(__dirname, 'popup.html'),
        background: resolve(__dirname, 'src/background.ts'),
        // content: resolve(__dirname, 'src/content-script.ts')
      },
      output: {
        format: 'es',               // ✅ ESM moderne
        inlineDynamicImports: false,
        entryFileNames: (chunk) => {
          if (chunk.name === 'background') return 'background.js'
          if (chunk.name === 'content') return 'content-script.js'
          return 'assets/[name].js'
        },
        chunkFileNames: 'assets/[name].js',
        assetFileNames: 'assets/[name].[ext]'
      }
    }
  }
})
